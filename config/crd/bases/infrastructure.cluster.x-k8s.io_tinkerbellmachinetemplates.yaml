
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: tinkerbellmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: TinkerbellMachineTemplate
    listKind: TinkerbellMachineTemplateList
    plural: tinkerbellmachinetemplates
    singular: tinkerbellmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: TinkerbellMachineTemplate is the Schema for the tinkerbellmachinetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TinkerbellMachineTemplateSpec defines the desired state of
              TinkerbellMachineTemplate.
            properties:
              template:
                description: TinkerbellMachineTemplateResource describes the data
                  needed to create am TinkerbellMachine from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      hardwareName:
                        description: Those fields are set programmatically, but they
                          cannot be re-constructed from "state of the world", so we
                          put them in spec instead of status.
                        type: string
                      imageLookupBaseRegistry:
                        description: ImageLookupBaseRegistry is the base Registry
                          URL that is used for pulling images, if not set, the default
                          will be to use ghcr.io/tinkerbell/cluster-api-provider-tinkerbell.
                        type: string
                      imageLookupFormat:
                        description: 'ImageLookupFormat is the URL naming format to
                          use for machine images when a machine does not specify.
                          When set, this will be used for all cluster machines unless
                          a machine specifies a different ImageLookupFormat. Supports
                          substitutions for {{.BaseRegistry}}, {{.OSDistro}}, {{.OSVersion}}
                          and {{.KubernetesVersion}} with the basse URL, OS distribution,
                          OS version, and kubernetes version, respectively. BaseRegistry
                          will be the value in ImageLookupBaseRegistry or ghcr.io/tinkerbell/cluster-api-provider-tinkerbell
                          (the default), OSDistro will be the value in ImageLookupOSDistro
                          or ubuntu (the default), OSVersion will be the value in
                          ImageLookupOSVersion or default based on the OSDistro (if
                          known), and the kubernetes version as defined by the packages
                          produced by kubernetes/release: v1.13.0, v1.12.5-mybuild.1,
                          or v1.17.3. For example, the default image format of {{.BaseRegistry}}/{{.OSDistro}}-{{.OSVersion}}:{{.KubernetesVersion}}.gz
                          will attempt to pull the image from that location. See also:
                          https://golang.org/pkg/text/template/'
                        type: string
                      imageLookupOSDistro:
                        description: ImageLookupOSDistro is the name of the OS distro
                          to use when fetching machine images, if not set it will
                          default to ubuntu.
                        type: string
                      imageLookupOSVersion:
                        description: ImageLookupOSVersion is the version of the OS
                          distribution to use when fetching machine images. If not
                          set it will default based on ImageLookupOSDistro.
                        type: string
                      providerID:
                        type: string
                      templateOverride:
                        description: TemplateOverride overrides the default CAPT hardware
                          template
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
